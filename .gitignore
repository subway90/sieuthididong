#!!# Các bước khởi tạo repo trên GITHUB #!!#

# B1: Tạo mới 1 repo trên github
# B2: mở Terminal VSCode (Ctrl + Shift + ~)
# B3: git init

## git config --global user.name "yourname" (tạo user)
## git config --global user.email "yourmail" (tạo mail)
## 2 bước trên dành cho chưa tạo user git ở global, đã tạo có thể bỏ qua ##

# B4: git add .
# B5: git commit -m"message"
# B6: git remote add origin [link your repo] (thêm origin từ trên server git)
# B7: git branch -M main
# B8: git push -u main

#!!# Các bước repo dự án chung #!!#
# B1: Mở Terminal VSCode tại folder (Lưu ý: nên mở tại vị trí folder lưu chung tệp, ví dụ htdocs)
# B2: git clone [URL REPO] ([URL REPO] : đường dẫn của repo)
# B3: git config --global user.name "Your Name"
# B3: git config --global user.email "yourmail@domain.com"
# B4: Xong, có thể thực hiện push, pull tùy thích

#!!# CÁC LỆNH GIT HAY DÙNG #!!#

# git add . (thêm các file chưa được commit -> dấu chấm là add tất cả file)
# git add [Name File] (như trên,nhưng  theo từng file, [Name File]: nhập tên file cần add)
# git reset (hủy các file đã add vào Stage Area - tức lệnh git add)
# git commit -m"[message]" (commit lên Stage Area - [message] : ghi chú cho commit này)
# git push (đẩy các commit từ Stage Area lên server)
# git pull (kéo code thay đổi từ trên server về local)
## Khi dùng git pull để đồng bộ code từ 2 brand khác nhau đã được push (trường hợp có 2 commit khác cùng trên 1 file), có thể chọn:
### Accept Current Change   : chọn sự thay đổi code từ máy mình
### Accept Incomming Change : chọn sự thay đổi từ trên server (tức commit từ người khác)
# git status (kiểm tra trạng thái của repo)
# git log (coi các log đã commit lên server) -> Sau khi xem xong nhấn nút Q để thoát chế độ LOG

#!!# CÁC LỆNH GIT ÍT DÙNG #!!#

# git reset --hard [id commit] (Quay về commit cũ, [id commit]: khi dùng lệnh git log)
# git push --force (Đẩy các code cũ từ commit đã quay lại khi - tức sau khi dùng lệnh reset --hard [id commit])

#!!# Branch #!!#
# git branch [Name Branch] (thêm mới 1 branch, [Name Branch]: tên của branch cần tạo)
# git branch (kiểm tra Branch, màu xanh lá: Branch bạn đang dùng)
# git checkout [Name Branch] (chuyển qua Branch khác, [Name Branch]: tên branch muốn chuyển qua)
# git checkout -b [Name Branch] (tạo và chuyển qua Branch mới - Kết hợp từ lệnh git branch [NB] & lệnh git checkout [NB])
# git push --set-upstream origin [Name Branch] (thêm Branch mới lên server, lệnh này sẽ được thông báo nếu bạn muốn push commit từ branch mới tạo)
# git merge [Name Branch] (nối code từ [Name Branch] HEAD vào MAIN - tức Branch chính)

# KHÔNG CHỈNH SỬA - NOT EDIT HERE

APP
config